name: Java Spring Boot CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Java
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Use Temurin JDK
          java-version: 21 # Specify Java 21

      # Step 3: Cache Maven dependencies
      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven
            # Exclude cache files that are not directly related to dependencies
          options: |
            --exclude="**/resolver-status.properties"
            --exclude="**/lastUpdated"
          

      # Step 4: Build and Test updated storage admin to charge me a bunch of money 7
      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Login to Google Cloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Build Docker Image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/billsapi:latest .

      - name: Push Docker Image to Google Container Registry
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/billsapi:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy billsapi \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/billsapi:latest \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --quiet

      

#      # Step 5: Run Unit Tests
#      - name: Run Unit Tests
#        run: mvn test
#
#      # Step 6: Archive Test Reports
#      - name: Archive Test Reports
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: test-reports
#          path: target/surefire-reports/

      # step 7: Attempt to reduce loading time
      - name: Cleanup Maven Repository
        run: find ~/.m2/repository -name "*.lastUpdated" -type f -delete

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Java
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21

      # Step 3: Deploy to Server
      - name: Deploy to Server
        run: |
          echo "Deploying application..."
          # Add deployment script here, e.g., SCP JAR file to server, SSH into server, etc.
